{"version":3,"sources":["../../src/pages/task-create/task-create.module.ts","../../src/pages/task-create/task-create.ts"],"names":[],"mappings":"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","file":"10.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { TaskCreatePage } from './task-create';\n\n@NgModule({\n  declarations: [\n    TaskCreatePage,\n  ],\n  imports: [\n    IonicPageModule.forChild(TaskCreatePage),\n  ],\n})\nexport class TaskCreatePageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/task-create/task-create.module.ts","import { Component } from '@angular/core';\nimport { IonicPage, NavController, ModalController } from 'ionic-angular';\nimport { TaskProvider } from \"../../providers/task/task\";\nimport { ProfileProvider } from \"../../providers/profile/profile\";\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\n\n@IonicPage()\n@Component({\n  selector: 'page-task-create',\n  templateUrl: 'task-create.html',\n})\nexport class TaskCreatePage {\n  public address;\n  public online ={\n    checked :false\n  };\n  public showLocation;\n  public taskCategory: Array<any>;\n  x = {};\n  public createTaskForm: FormGroup;\n  public today: String;\n\n  constructor(\n    public navCtrl: NavController, \n    public taskProvider: TaskProvider,\n    public profileProvider: ProfileProvider,\n    private modalCtrl : ModalController,\n    formBuilder: FormBuilder\n  ) {\n    this.address = {\n    place: '',\n    latitude: '',\n    longitude:''\n   };\n   this.showLocation=false;\n   this.createTaskForm = formBuilder.group({\n     taskName : [\n       \"\",\n       Validators.compose([Validators.required])\n     ],\n     taskCat  : [\n      \"\",\n      Validators.compose([Validators.required])\n    ],\n     taskDescription : [\n      \"\",\n      Validators.compose([Validators.required])\n    ],\n     taskAddress: [\n      \"\",\n      Validators.compose([Validators.required])\n    ],\n     taskBudget: [\n      \"\",\n      Validators.compose([Validators.required])\n    ],\n     taskerNumber: [\n      1,\n      Validators.compose([Validators.required])\n    ],\n     taskDate: [\n      \"\",\n      Validators.compose([Validators.required])\n    ],\n    taskOnline: [\n      false\n    ],\n   })\n  }\n\n  ionViewDidLoad() {\n    console.log('ionViewDidLoad TaskCreatePage');\n    this.taskProvider.getTaskCategory().on(\"value\", taskCatSnapshot => {\n      this.taskCategory = [];\n      taskCatSnapshot.forEach(snap => {\n        this.taskCategory.push({\n          id: snap.key,\n          name: snap.val().name\n        });\n        return false;\n      });\n    });\n    this.today =new Date().toISOString();\n    this.createTaskForm.controls['taskDate'].setValue(this.today) ;\n    \n  }\n\n  createTask(\n    // taskName: string, \n    // taskDate: string, \n    // taskCategory: string, \n    // // taskLocation: string,\n    // taskDescription: string, \n    // taskBudget: number,\n    // taskerNumber: number\n  ): void {\n    if (!this.createTaskForm.valid) {\n      this.createTaskForm.controls['taskName'].markAsDirty();\n      console.log(\n       `Need to complete the form, current value: ${this.createTaskForm.value}`\n      );\n    } else {\n    const taskName: string = this.createTaskForm.value.taskName;\n    const taskDate: string = this.createTaskForm.value.taskDate;\n    const taskCat: string = this.createTaskForm.value.taskCat;\n    // const taskAddress: string = this.createTaskForm.value.taskAddress;\n    const taskDescription: string = this.createTaskForm.value.taskDescription;\n    const taskBudget: number = this.createTaskForm.value.taskBudget;\n    const taskerNumber: number = this.createTaskForm.value.taskerNumber;\n    this.taskProvider\n      .createTask(taskName, taskDate, taskCat,this.address, taskDescription, taskBudget, taskerNumber)\n      .then(newEvent => {\n        this.navCtrl.pop()\n      });\n    }\n  }\n\n  showAddressModal () {\n    console.log(\"showaddressmodal\");\n    let modal = this.modalCtrl.create('AutoCompletePage');\n    // let me = this;\n    modal.onDidDismiss(data => {\n      if(data!=null){\n      this.createTaskForm.controls['taskAddress'].setValue(data.address) ;\n      this.address.place = data.address;\n      this.address.latitude = data.latitude;\n      this.address.longitude = data.longitude;\n      }\n    });\n    modal.present();\n  }\n\n  updateOnline(e){\n    if(e) {\n      this.createTaskForm.controls['taskAddress'].setValue(\"Online\") ;\n      this.address.place = \"Online\";\n    }\n  }\n\n  \n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/task-create/task-create.ts"],"sourceRoot":""}