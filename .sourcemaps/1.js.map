{"version":3,"sources":["../../src/pages/reset-password/reset-password.module.ts","../../src/validators/email.ts","../../src/pages/reset-password/reset-password.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAyC;AACO;AACK;AAUrD,IAAa,uBAAuB;IAApC;IAAsC,CAAC;IAAD,8BAAC;AAAD,CAAC;AAA1B,uBAAuB;IARnC,uEAAQ,CAAC;QACR,YAAY,EAAE;YACZ,0EAAiB;SAClB;QACD,OAAO,EAAE;YACP,sEAAe,CAAC,QAAQ,CAAC,0EAAiB,CAAC;SAC5C;KACF,CAAC;GACW,uBAAuB,CAAG;AAAH;;;;;;;;;ACVpC;AAAA;IAAA;IAcA,CAAC;IAbU,sBAAO,GAAd,UAAe,OAAoB;QAC/B,IAAM,EAAE,GAAG,4DAA4D;aACtE,IAAI,CACD,OAAO,CAAC,KAAK,CAChB,CAAC;QACF,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YACL,MAAM,CAAC,IAAI,CAAC;QAChB,CAAC;QAED,MAAM,CAAC;YACH,YAAY,EAAE,IAAI;SACrB,CAAC;IACN,CAAC;IACL,qBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;AChByC;AAC4B;AACF;AACX;AACD;AAExD;;;;;GAKG;AAOH,IAAa,iBAAiB;IAG5B,2BACS,OAAsB,EACtB,YAA0B,EAC1B,SAA0B,EACjC,WAAwB;QAHjB,YAAO,GAAP,OAAO,CAAe;QACtB,iBAAY,GAAZ,YAAY,CAAc;QAC1B,cAAS,GAAT,SAAS,CAAiB;QAGjC,IAAI,CAAC,iBAAiB,GAAG,WAAW,CAAC,KAAK,CAAC;YACzC,KAAK,EAAE;gBACL,EAAE;gBACF,kEAAU,CAAC,OAAO,CAAC,CAAC,kEAAU,CAAC,QAAQ,EAAE,yEAAc,CAAC,OAAO,CAAC,CAAC;aAClE;SACF,CAAC,CAAC;IACL,CAAC;IAED,yCAAa,GAAb;QAAA,iBAqCC;QApCC,EAAE,EAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC,CAAC;YACjC,OAAO,CAAC,GAAG,CACT,0CAAwC,IAAI,CAAC,iBAAiB,CAAC,KAAO,CACvE,CAAC;QACJ,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAM,KAAK,GAAW,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,KAAK,CAAC;YACzD,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,IAAI,CACzC,cAAI;gBACF,IAAM,KAAK,GAAU,KAAI,CAAC,SAAS,CAAC,MAAM,CAAC;oBACzC,OAAO,EAAE,4CAA4C;oBACrD,OAAO,EAAE;wBACP;4BACE,IAAI,EAAE,IAAI;4BACV,IAAI,EAAE,QAAQ;4BACd,OAAO,EAAE;gCACP,KAAI,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC;4BACrB,CAAC;yBACF;qBACF;iBACF,CAAC,CAAC;gBACH,KAAK,CAAC,OAAO,EAAE,CAAC;YAClB,CAAC,EACD,eAAK;gBACH,IAAM,UAAU,GAAG,KAAI,CAAC,SAAS,CAAC,MAAM,CAAC;oBACvC,OAAO,EAAE,KAAK,CAAC,OAAO;oBACtB,OAAO,EAAC;wBACN;4BACE,IAAI,EAAC,IAAI;4BACT,IAAI,EAAE,QAAQ;yBACf;qBACF;iBACF,CAAC,CAAC;gBACH,UAAU,CAAC,OAAO,EAAE,CAAC;YACvB,CAAC,CACF;QACH,CAAC;IACH,CAAC;IAED,0CAAc,GAAd;QACE,OAAO,CAAC,GAAG,CAAC,kCAAkC,CAAC,CAAC;IAClD,CAAC;IAEH,wBAAC;AAAD,CAAC;AA5DY,iBAAiB;IAJ7B,wEAAS,CAAC;QACT,QAAQ,EAAE,qBAAqB;OACG;KACnC,CAAC;mFAK+B;QACR,sEAAY;QACf,qEAAe;QACpB,WAAW;AAqD3B;SA5DY,iBAAiB,gB","file":"1.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { ResetPasswordPage } from './reset-password';\n\n@NgModule({\n  declarations: [\n    ResetPasswordPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(ResetPasswordPage),\n  ],\n})\nexport class ResetPasswordPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/reset-password/reset-password.module.ts","import { FormControl } from '@angular/forms';\r\n\r\nexport class EmailValidator {\r\n    static isValid(control: FormControl) {\r\n        const re = /^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$/\r\n        .test(\r\n            control.value\r\n        );\r\n        if (re) {\r\n            return null;\r\n        }\r\n    \r\n        return {\r\n            invalidEmail: true\r\n        };\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/validators/email.ts","import { Component } from '@angular/core';\nimport { \n  Alert,\n  AlertController,\n  IonicPage, \n  NavController, \n  // NavParams \n} from 'ionic-angular';\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\nimport { AuthProvider } from \"../../providers/auth/auth\";\nimport { EmailValidator } from \"../../validators/email\";\n\n/**\n * Generated class for the ResetPasswordPage page.\n *\n * See https://ionicframework.com/docs/components/#navigation for more info on\n * Ionic pages and navigation.\n */\n\n@IonicPage()\n@Component({\n  selector: 'page-reset-password',\n  templateUrl: 'reset-password.html',\n})\nexport class ResetPasswordPage {\n  public resetPasswordForm : FormGroup;\n\n  constructor(\n    public navCtrl: NavController, \n    public authProvider: AuthProvider,\n    public alertctrl: AlertController,\n    formBuilder: FormBuilder\n  ){\n    this.resetPasswordForm = formBuilder.group({\n      email: [\n        \"\",\n        Validators.compose([Validators.required, EmailValidator.isValid])\n      ]\n    });\n  }\n\n  resetPassword(): void {\n    if(!this.resetPasswordForm.valid) {\n      console.log (\n        `Form is not valid yet, curren value: ${this.resetPasswordForm.value}`\n      );\n    } else {\n      const email: string = this.resetPasswordForm.value.email;\n      this.authProvider.resetPassword(email).then(\n        user => {\n          const alert: Alert = this.alertctrl.create({\n            message: \"Check your email for a password reset link\",\n            buttons: [\n              {\n                text: \"Ok\",\n                role: \"cancel\",\n                handler: () => {\n                  this.navCtrl.pop();\n                }\n              }\n            ]\n          });\n          alert.present();\n        },\n        error => {\n          const errorAlert = this.alertctrl.create({\n            message: error.message,\n            buttons:[\n              {\n                text:\"Ok\",\n                role: \"cancel\"    \n              }\n            ]\n          });\n          errorAlert.present();\n        }\n      )\n    }\n  }\n\n  ionViewDidLoad() {\n    console.log('ionViewDidLoad ResetPasswordPage');\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/reset-password/reset-password.ts"],"sourceRoot":""}