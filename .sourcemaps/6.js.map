{"version":3,"sources":["../../src/pages/task-update/task-update.module.ts","../../src/pages/task-update/task-update.ts"],"names":[],"mappings":"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","file":"6.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { TaskUpdatePage } from './task-update';\n\n@NgModule({\n  declarations: [\n    TaskUpdatePage,\n  ],\n  imports: [\n    IonicPageModule.forChild(TaskUpdatePage),\n  ],\n})\nexport class TaskUpdatePageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/task-update/task-update.module.ts","import { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams, ModalController } from 'ionic-angular';\nimport { TaskProvider } from \"../../providers/task/task\";\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\n\n/**\n * Generated class for the TaskUpdatePage page.\n *\n * See https://ionicframework.com/docs/components/#navigation for more info on\n * Ionic pages and navigation.\n */\n\n@IonicPage()\n@Component({\n  selector: 'page-task-update',\n  templateUrl: 'task-update.html',\n})\nexport class TaskUpdatePage {\n  public currentTask: any= {};\n  public address;\n  public online ={\n    checked :false\n  };\n  public showLocation;\n  public taskCategory: Array<any>;\n  x = {};\n  public updateTaskForm: FormGroup;\n  public today: String;\n  constructor(\n    public navCtrl: NavController, \n    public navParams: NavParams,\n    public taskProvider: TaskProvider,\n    private modalCtrl: ModalController,\n    formBuilder: FormBuilder\n  ) {\n    this.address = {\n      place: '',\n      latitude: '',\n      longitude:''\n     };\n     this.showLocation=false;\n     this.updateTaskForm = formBuilder.group({\n       taskName : [\n         \"\",\n         Validators.compose([Validators.required])\n       ],\n       taskCat  : [\n        \"\",\n        Validators.compose([Validators.required])\n      ],\n       taskDescription : [\n        \"\",\n        Validators.compose([Validators.required])\n      ],\n       taskAddress: [\n        \"\",\n        Validators.compose([Validators.required])\n      ],\n       taskBudget: [\n        \"\",\n        Validators.compose([Validators.required])\n      ],\n       taskerNumber: [\n        1,\n        Validators.compose([Validators.required])\n      ],\n       taskDate: [\n        \"\",\n        Validators.compose([Validators.required])\n      ],\n      taskOnline: [\n        false\n      ],\n     })\n  }\n\n  ionViewDidLoad() {\n    console.log('ionViewDidLoad TaskUpdatePage');\n    this. taskProvider\n    .getTaskDetail(this.navParams.get(\"taskId\"))\n    .once(\"value\", taskSnapshot => {\n      if(taskSnapshot!=null){\n      this.currentTask = taskSnapshot.val();\n      this.currentTask.id = taskSnapshot.key;\n      this.updateTaskForm.controls['taskDate'].setValue(taskSnapshot.val().date) ;\n      this.updateTaskForm.controls['taskCat'].setValue(taskSnapshot.val().category) ; \n      this.updateTaskForm.controls['taskName'].setValue(taskSnapshot.val().name) ;\n      this.updateTaskForm.controls['taskDescription'].setValue(taskSnapshot.val().description) ;\n      this.updateTaskForm.controls['taskBudget'].setValue(taskSnapshot.val().budget) ;\n      this.updateTaskForm.controls['taskerNumber'].setValue(taskSnapshot.val().taskerNumber) ;\n      if(taskSnapshot.val().location.place === \"Online\"){\n        this.updateTaskForm.controls['taskOnline'].setValue(true);\n      }\n      this.updateTaskForm.controls['taskAddress'].setValue(taskSnapshot.val().location.place) ;\n      this.address.place = taskSnapshot.val().location.place;\n      this.address.latitude = taskSnapshot.val().location.latitude;\n      this.address.longitude = taskSnapshot.val().location.longitude;\n      }\n      \n    });\n    this.taskProvider.getTaskCategory().on(\"value\", taskCatSnapshot => {\n      this.taskCategory = [];\n      taskCatSnapshot.forEach(snap => {\n        this.taskCategory.push({\n          id: snap.key,\n          name: snap.val().name\n        });\n        return false;\n      });\n    });\n    this.today =new Date().toISOString();\n  }\n\n  updateTask(\n    // taskName: string, \n    // taskDate: string, \n    // taskCategory: string, \n    // // taskLocation: string,\n    // taskDescription: string, \n    // taskBudget: number,\n    // taskerNumber: number\n  ): void {\n    if (!this.updateTaskForm.valid) {\n      this.updateTaskForm.controls['taskName'].markAsDirty();\n      console.log(\n       `Need to complete the form, current value: ${this.updateTaskForm.value}`\n      );\n    } else {\n    const taskName: string = this.updateTaskForm.value.taskName;\n    const taskDate: string = this.updateTaskForm.value.taskDate;\n    const taskCat: string = this.updateTaskForm.value.taskCat;\n    // const taskAddress: string = this.createTaskForm.value.taskAddress;\n    const taskDescription: string = this.updateTaskForm.value.taskDescription;\n    const taskBudget: number = this.updateTaskForm.value.taskBudget;\n    const taskerNumber: number = this.updateTaskForm.value.taskerNumber;\n    this.taskProvider\n      .updateTask(this.currentTask.id, taskName, taskDate, taskCat,this.address, taskDescription, taskBudget, taskerNumber)\n      .then(newEvent => {\n        this.navCtrl.pop()\n      });\n    }\n  }\n\n  showAddressModal () {\n    console.log(\"showaddressmodal\");\n    let modal = this.modalCtrl.create('AutoCompletePage');\n    // let me = this;\n    modal.onDidDismiss(data => {\n      if(data!=null){\n      this.updateTaskForm.controls['taskAddress'].setValue(data.address) ;\n      this.address.place = data.address;\n      this.address.latitude = data.latitude;\n      this.address.longitude = data.longitude;\n      }\n    });\n    modal.present();\n  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/task-update/task-update.ts"],"sourceRoot":""}